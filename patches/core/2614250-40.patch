diff --git a/core/lib/Drupal/Core/Field/Plugin/Field/FieldWidget/NumberWidget.php b/core/lib/Drupal/Core/Field/Plugin/Field/FieldWidget/NumberWidget.php
index b4fac537b4..6dec136a4a 100644
--- a/core/lib/Drupal/Core/Field/Plugin/Field/FieldWidget/NumberWidget.php
+++ b/core/lib/Drupal/Core/Field/Plugin/Field/FieldWidget/NumberWidget.php
@@ -107,11 +107,4 @@ public function formElement(FieldItemListInterface $items, $delta, array $elemen
     return ['value' => $element];
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public function errorElement(array $element, ConstraintViolationInterface $violation, array $form, FormStateInterface $form_state) {
-    return $element['value'];
-  }
-
 }
diff --git a/core/modules/field/src/Tests/Number/NumberFieldTest.php b/core/modules/field/src/Tests/Number/NumberFieldTest.php
index c69141050f..e4d59b71cb 100644
--- a/core/modules/field/src/Tests/Number/NumberFieldTest.php
+++ b/core/modules/field/src/Tests/Number/NumberFieldTest.php
@@ -3,6 +3,8 @@
 namespace Drupal\field\Tests\Number;
 
 use Drupal\Component\Utility\Unicode;
+use Drupal\Core\Entity\Entity\EntityFormDisplay;
+use Drupal\Core\Field\FieldStorageDefinitionInterface;
 use Drupal\field\Entity\FieldConfig;
 use Drupal\node\Entity\Node;
 use Drupal\simpletest\WebTestBase;
@@ -490,6 +492,43 @@ public function testNumberFormatter() {
   }
 
   /**
+   * Tests required number field in combination with AJAX requests.
+   */
+  function testRequiredNumberFieldAndAjax() {
+
+    // Create a required number field.
+    $field_name = 'required_number';
+    $storage = FieldStorageConfig::create(array(
+      'field_name' => $field_name,
+      'entity_type' => 'entity_test',
+      'type' => 'integer',
+    ));
+    $storage->save();
+
+    FieldConfig::create(array(
+      'field_name' => $field_name,
+      'entity_type' => 'entity_test',
+      'bundle' => 'entity_test',
+      'required' => TRUE,
+    ))->save();
+
+    EntityFormDisplay::load('entity_test.entity_test.default')
+      ->setComponent($field_name, array(
+        'type' => 'number',
+      ))
+      ->save();
+
+    // Set test text field cardinality to unlimited.
+    FieldStorageConfig::load('entity_test.field_test_text')
+      ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
+      ->save();
+
+    $this->drupalGet('entity_test/add');
+    $this->drupalPostAjaxForm(NULL, array(), 'field_test_text_add_more');
+    $this->assertResponse(200);
+  }
+
+  /**
    * Tests setting the minimum value of a float field through the interface.
    */
   public function testCreateNumberFloatField() {
