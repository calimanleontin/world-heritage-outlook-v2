/* ==========================================================================
   Rem system helpers
   ========================================================================== */

.remify(@property, @value) {
  & when (ispixel(@value)) {
    @{property}: @value;
    @{property}: unit(@value) * @rem-multiplier--desktop;
  }
  & when not (ispixel(@value)) {
    @{property}: @value;
  }
}

.responsive(@property, @value, @value-mobile: (floor(@value * @rem-system-base--mobile / @rem-system-base) * 1px)) {
  .remify(@property, @value);

  @media @grid-mobile {
    @{property}: @value-mobile;
  }
}

/* ==========================================================================
   Bootstrap mixin overrides
   ========================================================================== */

.label-variant(@color) {
  color: #fff;
}

.background-variant(@bg, @color) {
  background-color: @bg;
  color: @color;
  a:not([class*='chosen']) {
    color: @color;
    &:hover, &:focus, &:active {
      color: @link-hover-color;
    }
  }
}

/* ==========================================================================
   Theme specific mixins
   ========================================================================== */

.svg-icon(@name) {
  background-image: url(~'@{images-path}@{name}.svg');
  background-repeat: no-repeat;
}

.link() {
  color: @link-color;
  transition: color .2s, background-color .2s;
  &:hover, &:focus, &:active {
    text-decoration: none;
    color: @link-hover-color;
  }
}

.light-link() {
  &, a {
    color: @iucn-blue-light;
  }
}

.left-bordered-heading() {
  border-left: .4em solid;
  color: @iucn-blue-dark;
  line-height: 1.2;
  padding-top: .3em;
  padding-bottom: .3em;
  padding-left: .25em;
  text-align: left;
  @media @mobile {
    .row();
    border-left-width: 10px;
    // line-height: 1.4;
  }
}

.bottom-border {
  border-bottom: 1px solid #ddd;
  display: block;
  font-size: 1em;
  font-weight: normal;
  margin-bottom: 1em;
  padding-bottom: .5rem;
  text-transform: uppercase;
  h1&, h2&, h3&, h4&, h5&, h6& {
    margin-top: 0;
    @media @grid-mobile {
      font-size: 1.3em;
    }
  }
}

.iucn-base-arrow(@height: 50 * @rem-multiplier--desktop) {
  align-items: center;
  background-color: @iucn-blue-dark;
  color: #fff;
  box-shadow: 0 7px 11px -9px fade(#000, 90%);
  display: flex;
  .remify(height, @height);
  line-height: 1;
  .remify(margin-right, (@height / 2));
  padding-left: 1em;
  padding-right: 1em;
  position: relative;
  &:after {
    content: "";
    width: 0;
    height: 0;
    border-style: solid;
    border-width: (@height / 2) 0 (@height / 2 ) (@height / 2);
    border-color: transparent transparent transparent @iucn-blue-dark;
    position: absolute;
    left: 100%;
    top: 0;
  }

  .loop-conservation-ratings({
    &.@{conservation-rating-class} {
      background-color: @conservation-rating-color;
      &:after {
        border-color: transparent transparent transparent @conservation-rating-color;
      }
    }
  });
}

/* ==========================================================================
   Generators
   ========================================================================== */

// .loop-headings(@rules, @index: 6) when (@index > 0) {
//   @paragraph-heading-selector: ~'h@{index}';
//   @rules();

//   // next iteration
//   .loop-headings(@rules, (@index - 1));
// }

// Generate conservation rating styling
@conservation-ratings-list: 'good', 'good-concerns', 'significant-concern', 'critical', 'data-deficient', 'coming-soon';

.loop-conservation-ratings(@rules, @index: length(@conservation-ratings-list)) when (@index > 0) {
  @conservation-rating-class: e(extract(@conservation-ratings-list, @index));
  @conservation-rating-color: ~'@{@{conservation-rating-class}}';
  @rules();

  // next iteration
  .loop-conservation-ratings(@rules, (@index - 1));
}

// Generate categories (?)
@conservation-categories-list: 'values', 'threats', 'protection-management';

.loop-conservation-categories(@rules, @index: length(@conservation-categories-list)) when (@index > 0) {
  @conservation-category-class: e(extract(@conservation-categories-list, @index));
  @rules();

  // next iteration
  .loop-conservation-categories(@rules, (@index - 1));
}

// Generate rotation angles for iucn arrow decorations
@iucn-arrows-max-no: 6;

.loop-iucn-arrows(@index: @iucn-arrows-max-no) when (@index > 0) {
  ol.iucn-list-@{index} {
    .loop-iucn-arrow(@index);
  }

  // next iteration
  .loop-iucn-arrows((@index - 1));
}

.loop-iucn-arrow(@index-inner) when (@index-inner > 0) {
  @newIndex: (@index - @index-inner + 1);
  li.iucn-arrow:nth-child(@{newIndex}):before {
    //3
    transform: rotateY(-80deg) skewY( (@newIndex - 1) * (18deg) - (9 * (@index - 1)) );
  }

  // next iteration
  .loop-iucn-arrow((@index-inner - 1));
}
.loop-iucn-arrows();
