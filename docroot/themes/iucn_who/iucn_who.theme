<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function iucn_who_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__'.$content_type;
  }
}


/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function iucn_who_preprocess_block(&$variables) {
  // switch ($variables['base_plugin_id']) {
  //   case 'system_branding_block':
  //     $variables['site_logo'] = '';
  //     if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
  //       $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
  //     }
  //     break;

  // }
  if ($variables['base_plugin_id'] == 'home_page_map') {
    $variables['#attached']['library'][] =  'iucn_who/iucn-mobile-chrome-vh-fix';
  }

  if (isset($variables['elements']['#id'])) {
      $block_id = $variables['elements']['#id'];
      $block = \Drupal\block\Entity\Block::load($block_id);

      if ($block) {
        $variables['content']['#attributes']['data-block_id'] = $block_id;
        $variables['content']['#attributes']['data-region'] = $block->getRegion();
      }
  }

  // Change search api sort label based on sort order.
  if (isset($variables['content']['links']['#items'][0]['#theme'])) {
    if ($variables['content']['links']['#items'][0]['#theme'] == 'search_api_sorts_sort') {
      $url = $variables['content']['links']['#items'][0]['#url'];
      if (strpos($url, '/publications') !== FALSE) {
        if (strpos($url, 'order=asc') !== FALSE) {
          $variables['content']['links']['#items'][0]['#label'] = t('Sort from oldest to newest');
        }
      }
    }
  }
}

// add a template suggestion based on region name
// http://kristiankaa.dk/article/drupal8-region-specific-menu-theme-hook-suggestion
function iucn_who_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
    if (isset($variables['attributes']['data-region']) && isset($variables['attributes']['data-block_id'])) {
      $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['attributes']['data-block_id'] . '__' . $variables['attributes']['data-region'];
    }
}

function iucn_who_preprocess_iucn_who_1col(&$variables) {
  if (!empty($variables['content']['#paragraph'])) {
    $variables['attributes']['class'][] = 'paragraph';
    /* @var $paragraph Drupal\paragraphs\Entity\Paragraph $paragraph */
    $paragraph = $variables['content']['#paragraph'];
    _iucn_who_preprocess_set_background($variables, $paragraph);
  }
}

function _iucn_who_preprocess_set_background(&$variables, Drupal\paragraphs\Entity\Paragraph $paragraph) {
  if (!empty($paragraph->field_paragraph_background)) {
    $bg_value = $paragraph->field_paragraph_background->value;
    $variables['attributes']['class'][] = 'paragraph-background-' . $bg_value;
  }
}


function iucn_who_preprocess_page(&$variables) {
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    unset($variables['page']['header']['iucn_who_page_title']);
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function iucn_who_page_attachments_alter(array &$page) {

  $breakpoints = \Drupal::service('breakpoint.manager')->getBreakpointsByGroup('iucn'); // this should match the group name from mytheme.breakpoints.yml
  if (!empty($breakpoints)) {
    $media_queries = array();
    foreach ($breakpoints as $breakpoint) {
      foreach ($breakpoints as $id => $breakpoint) {
        $media_queries[$id] = $breakpoint->getMediaQuery();
      }
    }
    $page['#attached']['drupalSettings']['responsive']['breakpoints'] = $media_queries;
  }
}

function iucn_who_preprocess_iucn_who_benefits_category_teaser(&$variables) {
  if (!empty($variables['content']['#taxonomy_term'])) {
    /** @var \Drupal\taxonomy\Entity\Term $term */
    $term = $variables['content']['#taxonomy_term'];
    $url = $term->url();
    $variables['read_more'] = t('Go to') . ' ' . strtolower($term->getName()) . ' >';
    $variables['read_more_link'] = $url;
  }
}

function iucn_who_preprocess_iucn_who_publications_full(&$variables)
{
  $node = $variables['content']['#node'];
  if ($file = $node->field_file->entity) {
    $variables['download_pdf_uri'] = $file->getFileUri();
  }
}

function iucn_who_preprocess_field(&$variables) {
  if ($variables['field_name'] == 'field_images' && $variables['element']['#object']->bundle() == 'image_grid') {
    /* @var \Drupal\paragraphs\Entity\Paragraph */
    $paragraph = $variables['element']['#object'];
    $per_row = $paragraph->field_grid_style->value;
    $items_no = $paragraph->field_images->count();
    $variables['rows'] = ceil($items_no / $per_row);
    $variables['per_row'] = $per_row;
  }
}
