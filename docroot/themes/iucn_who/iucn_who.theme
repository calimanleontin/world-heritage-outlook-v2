<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Template\Attribute;
use Drupal\node\NodeInterface;
use Drupal\node\Entity\Node;
use Drupal\Core\Url;
use Drupal\Component\Render\FormattableMarkup;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function iucn_who_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if (is_string($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }
    if (is_object($node)) {
      $content_type = $node->bundle();
      $suggestions[] = 'page__' . $content_type;
    }
  }
}

function iucn_who_preprocess_html(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (empty($node)) {
    return;
  }

  $nid = $node instanceof NodeInterface ? $node->id() : $node;
  $variables['attributes']['class'][] = "page-node-{$nid}";
}

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function iucn_who_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'facet_block':
      if (empty($variables['content'][0]['#items']) || !is_array($variables['content'][0]['#items'])) {
        break;
      }
      foreach ($variables['content'][0]['#items'] as $key => $item) {
        if ($variables['elements']['#id'] == 'inscriptioncriteria') {
          $criteria_id = $variables['content'][0]['#items'][$key]['#attributes']['data-drupal-facet-item-value'];
          $term = Term::load($criteria_id);
          if ($term) {
            if ($term->get('field_title')) {
              $criteria_name = $term->get('field_title')->getValue();
              $variables['content'][0]['#items'][$key]['#title']['#value'] = $criteria_name[0]['value'];
            }
            if ($term->get('field_description')) {
              $criteria_description = $term->get('field_description')->getValue();
              $variables['content'][0]['#items'][$key]['#attributes']['title'] = $criteria_description[0]['value'];
            }

          }
        }
        else {
          $variables['content'][0]['#items'][$key]['#attributes']['title'] = $variables['content'][0]['#items'][$key]['#title']['#value'];
        }
        $variables['content'][0]['#items'][$key]['#attributes']['data-toggle'] = 'tooltip';
        $variables['content'][0]['#items'][$key]['#attributes']['data-placement'] = 'top';

      }
      break;

    case 'home_page_map':
      $variables['#attached']['library'][] = 'iucn_who/maps';
      break;

    case 'benefits_page_map':
      $variables['#attached']['library'][] = 'iucn_who/maps';
      break;

    case 'page_title_block':
      $node = \Drupal::routeMatch()->getParameter('node');
      if($node){
        if($node instanceof \Drupal\node\Entity\Node){
          if($node->bundle() == 'site'){
            $variables['content']['#access'] = FALSE;
          }
        }else{
          $n = Node::load($node);
          if ($n && $n->bundle() == 'site') {
            $variables['content']['#access'] = FALSE;
          }
        }
      }
      break;

    case 'search_api_sorts_block':
      if ($variables['elements']['#id'] == 'sortbyviewsitessearchdisplaypage') {
        $items = &$variables['content']['links']['#items'][0];
        if ($items['#sort_field'] == 'title_sort' && $items['#order'] == 'desc') {
          $items['#label'] .= ' Z-A';
        }
        else {
          $items['#label'] .= ' A-Z';
        }
        $items['#url'] = '?sort=title_sort&order=' . $items['#order'];
      }

      if ($variables['elements']['#id'] == 'sortbyviewsitessearchdisplaypage_2') {
        $items = &$variables['content']['links']['#items'][0];
        $label = '<span class="sort-prefix">' . t('Sort by:') . '</span><span class="sort-body">' . t('Alphabetically');
        if ($items['#sort_field'] == 'title_sort' && $items['#order'] == 'desc') {
          $label .= t(' Z-A');
        }
        else {
          $label .= t(' A-Z');
        }
        $label .= '</span>';
        $items['#label'] = new FormattableMarkup($label, []);
        $items['#url'] = '?sort=title_sort&order=' . $items['#order'];
      }

      if ($variables['elements']['#id'] == 'sortbyviewpublicationsdisplaypage') {
        $items = &$variables['content']['links']['#items'][0];
        if ($items['#sort_field'] == 'field_publication_year' && $items['#order'] == 'asc') {
          $items['#label'] = t('Sort from oldest to newest');
        }
      }

      if ($variables['elements']['#id'] == 'sortbyviewpublicationsdisplaypage_2') {
        $items = &$variables['content']['links']['#items'][0];

        $label = '<span class="sort-prefix">' . t('Sort from') . '</span><span class="sort-body">';

        if ($items['#sort_field'] == 'field_publication_year' && $items['#order'] == 'asc') {
          $label .= t(' oldest to newest');
        }
        else {
          $label .= t(' newest to oldest');
        }

        $label .= '</span>';
        $items['#label'] = new FormattableMarkup($label, []);
      }
      break;
    case 'system_breadcrumb_block':
      // $variables['elements']['#cache']['max-age'] = 0;
      break;

    default:
      break;

  }

  if (isset($variables['elements']['#id'])) {
    $block_id = $variables['elements']['#id'];
    $block = \Drupal\block\Entity\Block::load($block_id);

    if ($block) {
      $variables['content']['#attributes']['data-block_id'] = $block_id;
      $variables['content']['#attributes']['data-region'] = $block->getRegion();
    }
  }
}

// add a template suggestion based on region name
// http://kristiankaa.dk/article/drupal8-region-specific-menu-theme-hook-suggestion
function iucn_who_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables['attributes']['data-region']) && isset($variables['attributes']['data-block_id'])) {
    $suggestions[] = $variables['theme_hook_original'] . '__' . $variables['attributes']['data-block_id'] . '__' . $variables['attributes']['data-region'];
  }
}

function iucn_who_preprocess_iucn_who_1col(&$variables) {
  if (!empty($variables['content']['#paragraph'])) {
    $variables['attributes']['class'][] = 'paragraph';
    /* @var $paragraph Drupal\paragraphs\Entity\Paragraph $paragraph */
    $paragraph = $variables['content']['#paragraph'];
    _iucn_who_preprocess_set_background($variables, $paragraph);
    _iucn_who_preprocess_set_mobile_visibility($variables, $paragraph);
  }
}

function _iucn_who_preprocess_set_background(&$variables, Drupal\paragraphs\Entity\Paragraph $paragraph) {
  if (!empty($paragraph->field_paragraph_background)) {
    $bg_value = $paragraph->field_paragraph_background->value;
    $variables['attributes']['class'][] = 'paragraph-background-' . $bg_value;
  }
}

function _iucn_who_preprocess_set_mobile_visibility(&$variables, Drupal\paragraphs\Entity\Paragraph $paragraph) {
  if (!empty($paragraph->field_hide_on_mobile->value)) {
    $variables['attributes']['class'][] = 'hidden-xs';
  }
}


function iucn_who_preprocess_page(&$variables) {
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    unset($variables['page']['header']['iucn_who_page_title']);
  }
}

/**
 * Implements hook_preprocess_image().
 */
function iucn_who_preprocess_image(&$variables) {
  // Some images should show title as caption.
  // The use-title-caption attributes is a common flag for this.
  // see preprocess_field to check where it is set.
  if (!empty($variables['attributes']['use-title-caption'])) {
    unset($variables['attributes']['use-title-caption']);
    $variables['use_title_caption'] = TRUE;
  }
}

/**
 * Implements hook_page_attachments_alter().
 */
function iucn_who_page_attachments_alter(array &$page) {

  $breakpoints = \Drupal::service('breakpoint.manager')->getBreakpointsByGroup('iucn'); // this should match the group name from mytheme.breakpoints.yml
  if (!empty($breakpoints)) {
    $media_queries = array();
    foreach ($breakpoints as $breakpoint) {
      foreach ($breakpoints as $id => $breakpoint) {
        $media_queries[$id] = $breakpoint->getMediaQuery();
      }
    }
    $page['#attached']['drupalSettings']['responsive']['breakpoints'] = $media_queries;
  }
}

function iucn_who_preprocess_iucn_who_benefits_category_teaser(&$variables) {
  if (!empty($variables['content']['#taxonomy_term'])) {
    /** @var \Drupal\taxonomy\Entity\Term $term */
    $term = $variables['content']['#taxonomy_term'];
    $url = $term->url();
    $variables['read_more'] = t('Go to') . ' ' . strtolower($term->getName()) . ' >';
    $variables['read_more_link'] = $url;
  }
}

function iucn_who_preprocess_iucn_who_publications_full(&$variables) {
  $node = $variables['content']['#node'];
  if ($file = $node->field_file->entity) {
    $variables['download_pdf_uri'] = $file->getFileUri();
  }
}

function iucn_who_preprocess_field(&$variables) {
  switch ($variables['field_name']) {
    case 'field_ph_images':
      if ($variables['element']['#object']->bundle() == 'image_grid') {
        /* @var \Drupal\paragraphs\Entity\Paragraph */
        $paragraph = $variables['element']['#object'];
        $per_row = $paragraph->field_grid_style->value;
        $items_no = $paragraph->field_ph_images->count();
        $variables['rows'] = ceil($items_no / $per_row);
        $variables['per_row'] = $per_row;
      }
      break;

    case 'field_content':
      if ($variables['element']['#object']->bundle() == 'content_html') {
        /* @var \Drupal\paragraphs\Entity\Paragraph */
        $paragraph = $variables['element']['#object'];
        $col_no = [12, 12];
        if (!empty($paragraph->field_grid_ratio->value)) {
          $ratios = explode('_', $paragraph->field_grid_ratio->value);
          $col = 12 / array_sum($ratios);
          foreach ($ratios as $idx => $val) {
            $col_no[$idx] = $col * $val;
          }
        }
        $variables['column_numbers'] = $col_no;
      }

      break;

    case 'field_page_teasers':
      $paragraph = $variables['element']['#object'];
      $items_no = $paragraph->field_page_teasers->count();
      $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
      $variables['col_class'] = 'col-sm-12';
      if ($variables['is_front']) {
        $variables['col_class'] = 'col-sm-' . round(12 / $items_no);
      }

      break;

      case 'field_teasers':
      if ($variables['element']['#object']->bundle() == 'content_teasers') {
        /* @var \Drupal\paragraphs\Entity\Paragraph */
        $paragraph = $variables['element']['#object'];
        $layout = 'list';
        $class = 'col-sm-12';
        if (!empty($paragraph->field_teasers_layout->value) && $paragraph->field_teasers_layout->value == 'grid') {
          $items_no = $paragraph->field_teasers->count();
          $class = $items_no == 1 ? 'col-sm-6' : 'col-sm-' . 12 / $items_no;
          $layout = 'grid';
        }
        $variables['col_class'] = $class;
        $variables['layout_type'] = $layout;
      }
      break;

    case 'field_as_protection':
      // Do not display paragraphs that have empty Justification.
      foreach ($variables['items'] as $key => $item) {
        /** @var Drupal\paragraphs\Entity\Paragraph $paragraph */
        $paragraph = $item['content']['#paragraph'];
        $justification = $paragraph->get('field_as_description')->getValue();
        if (!$justification) {
          unset($variables['items'][$key]);
        }
      }
      break;

    // Add custom classes to fields.
    case 'field_as_global_assessment_level':
    case 'field_as_vass_wh_state':
    case 'field_as_threats_rating':
    case 'field_as_protection_ov_rating':
      $field_name = $variables['field_name'];
      if (!empty($variables['element']['#object']->$field_name->entity)) {
        $variables['attributes']['class'][] = $variables['element']['#object']->$field_name->entity->field_css_identifier->value;
      }
      break;
  }

  // Set attributes use-title-caption for some fields on full mode.
  $image_fields = [
    'field_publication_image',
    'field_image',
    'field_benefit_image',
  ];
  $is_image_field = in_array($variables['field_name'], $image_fields);
  $is_full_mode = !empty($variables['element']['#view_mode'])
    && in_array($variables['element']['#view_mode'], ['full', 'default']);
  if ($is_image_field && $is_full_mode && !empty($variables['items'])) {
    foreach ($variables['items'] as &$item) {
      $item['content']['#item_attributes']['use-title-caption'] = 1;

      // BlazyManager takes the attributes from ['content']['#build']['item']->_attributes
      // and replaces ['content']['#item_attributes'] with them.
      if ($item['content']['#theme'] == 'blazy') {
        /** @var \Drupal\image\Plugin\Field\FieldType\ImageItem $build_item */
        $build_item = $item['content']['#build']['item'];
        $value = $build_item->getValue();
        $value['_attributes']['use-title-caption'] = 1;
        $build_item->setValue($value);
      }
    }
  }
}

function iucn_who_preprocess_form_element(&$variables) {
  if (!empty($variables['name']) && $variables['name'] == 'lang_dropdown_select') {
    $id = $variables['element']['#attributes']['id'];
    $variables['label']['#id'] = $id;
  }
}

function iucn_who_preprocess_iucn_who_sites_search(&$variables) {
  $variables['attributes']['class'][] = 'sites-rating';
  if ($node = $variables['content']['#node']) {
    if ($node->field_current_assessment->entity && $node->field_current_assessment->entity->field_as_global_assessment_level) {
      if ($current_assessment = $node->field_current_assessment->entity->field_as_global_assessment_level->entity) {
        $variables['attributes']['class'][] = $current_assessment->field_css_identifier->value;
        $variables['rating'] = $current_assessment->name->value;
      }
    }
  }
}


/**
 *
 * See also: modules/iucn/iucn_who_core/iucn_who_core.module iucn_who_core_system_breadcrumb_alter function.
 *
 * Prepares variables for breadcrumb templates.
 *
 * Default template: breadcrumb.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - links: A list of \Drupal\Core\Link objects which should be rendered.
 */
function iucn_who_preprocess_breadcrumb(&$variables) {
  $parameters = \Drupal::routeMatch()->getParameters()->all();
  if(isset($parameters['view_id'])) {
    $item = NULL;
    switch ($parameters['view_id']){
      case 'sites_search':
      //case 'publications':
        $item = 2;
        break;
      case 'frequently_asked_questions':
      case 'news':
        $item = 3;
        break;

      break;
      default:
        break;
    }

    if ($item && isset($variables['breadcrumb'][$item])) {
      if (isset($variables['breadcrumb'][$item - 1])) {
        $variables['breadcrumb'][$item - 1]['attributes'] = $variables['breadcrumb'][$item]['attributes'];
      }
      unset($variables['breadcrumb'][$item]);
    }
  }
}
