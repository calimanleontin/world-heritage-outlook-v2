<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\field\Entity\FieldConfig;
use Drupal\iucn_assessment\Form\NodeSiteAssessmentForm;

function iucn_backend_theme($existing, $type, $theme, $path) {
  return [
    'site_assessment_edit_form' => [
      'render element' => 'form',
      'template' => 'site-assessment-edit-form',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter for blocks.
 */
function iucn_backend_theme_suggestions_block_alter(&$suggestions, $variables) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('iucn_backend_', 'seven_', $suggestion);
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\node\NodeForm.
 *
 * Changes vertical tabs to container.
 */
function iucn_backend_theme_suggestions_node_edit_form_alter(&$suggestions, $variables) {
  if ($variables['form']['#form_id'] = 'site_assessment') {
    $suggestions[] = 'site_assessment_edit_form';
  }
}

function iucn_backend_form_node_form_alter(&$form, FormStateInterface $form_state) {
  if($form['#form_id'] == 'site_assessment') {
    $form['#theme'] = ['site_assessment_edit_form'];
  }
}

/**
 * Implements hook_preprocess_field_multiple_value_form().
 */
function iucn_backend_preprocess_field_multiple_value_form(&$variables) {
  if (!empty($variables['table']['#header']) && !empty($variables['element']['#field_name'])) {
    $field_name = $variables['element']['#field_name'];
    $field_entity = FieldConfig::loadByName('node', 'site_assessment', $field_name);
    if (!empty($field_entity) && $field_entity->getType() == 'entity_reference_revisions'
      && $field_entity->getSetting('handler') == 'default:paragraph') {

      if (NodeSiteAssessmentForm::currentUserIsAssessorOrLower()
        && NodeSiteAssessmentForm::isValuesTab()) {
        _iucn_backend_preprocess_field_multiple_value_form_remove_tabledrag($variables);
      }

      $title = $variables['element']['#title'];
      unset($variables['table']['#header'][1]);
      $variables['paragraph_header'] = [
        '#type' => 'table',
        '#header' => $variables['table']['#header'],
        '#rows' => [],
      ];
      unset($variables['table']['#header']);
    }
  }
}

/**
 * Helper function used to remove the tabledrag from a multiple value form.
 */
function _iucn_backend_preprocess_field_multiple_value_form_remove_tabledrag(&$variables) {
  if (isset($variables['table']['#tabledrag'])) {
    unset($variables['table']['#tabledrag']);
    array_pop($variables['table']['#header']);
    foreach ($variables['table']['#rows'] as &$row) {
      foreach (array_keys($row['data']) as $key) {
        if (!empty($row['data'][$key]['class']) && array_intersect($row['data'][$key]['class'], [
          'field-multiple-drag',
          'delta-order',
        ])) {
          unset($row['data'][$key]);
        }
      }
    }
  }
}