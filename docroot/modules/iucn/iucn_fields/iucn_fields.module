<?php

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_field_widget_form_alter().
 */
function iucn_fields_field_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
  /** @var \Drupal\Core\Field\WidgetInterface $widget */
  $widget = $context['widget'];
  $plugin_id = $widget->getPluginId();
  if ($plugin_id == 'options_select' || $plugin_id == 'assessment_options_buttons') {
    if (!_iucn_fields_is_altered_element($element, $context)) {
      return;
    }
    if (empty($assessment = _iucn_fields_get_assessment($form_state))) {
      return;
    }
    $assessment_year = $assessment->field_as_cycle->value;
    _iucn_fields_alter_element_options($element, $assessment_year);

    if ($plugin_id == 'assessment_options_buttons') {
      _iucn_fields_alter_element_options($element['options_groups'], $assessment_year);
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function iucn_fields_preprocess_field(&$variables) {
  if ($variables['element']['#entity_type'] != 'paragraph' || $variables['element']['#field_type'] != 'entity_reference') {
    return;
  }
  /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $items */
  $items = $variables['element']['#items'];
  /** @var \Drupal\field\Entity\FieldConfig $field_definition */
  $field_definition = $items->getFieldDefinition();
  $target_type = $field_definition->getSetting('target_type');
  if ($target_type != 'taxonomy_term') {
    return;
  }
  $field_name = $variables['field_name'];
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['element']['#object'];
  /** @var \Drupal\node\Entity\Node $assessment */
  $assessment = $paragraph->getParentEntity();
  if ($assessment->getType() != 'site_assessment') {
    return;
  }
  $assessment_year = $assessment->field_as_cycle->value;
  /** @var \Drupal\taxonomy\Entity\Term $term */
  $term = $paragraph->{$field_name}->entity;

  /** @var \Drupal\iucn_fields\Plugin\TermAlterService $term_alter_service */
  $term_alter_service = \Drupal::service('iucn_fields.term_alter');
  $is_hidden = $term_alter_service->isTermHiddenForYear($term->id(), $assessment_year);
  if ($is_hidden) {
    $term->name->value = '';
  }
  else {
    $term_label = $term_alter_service->getTermLabelForYear($term->id(), $assessment_year);
    if (!empty($term_label)) {
      $term->name->value = $term_label;
    }
  }
}

function _iucn_fields_get_assessment(\Drupal\Core\Form\FormStateInterface $form_state) {
  $assessment = $form_state->getFormObject()->getEntity();
  while ($assessment instanceof \Drupal\paragraphs\ParagraphInterface) {
    // Values paragraphs have threat paragraphs as parents.
    $assessment = $assessment->getParentEntity();
  }

  if ($assessment instanceof \Drupal\node\NodeInterface && $assessment->bundle() == 'site_assessment') {
    return $assessment;
  }

  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() == 'iucn_assessment.modal_paragraph_add') {
    return $route_match->getParameter('node_revision');
  }

  return NULL;
}

function _iucn_fields_is_altered_element($element, $context) {
  if ($element['#entity_type'] != 'paragraph') {
    return FALSE;
  }
  /** @var \Drupal\Core\Field\EntityReferenceFieldItemList $items */
  $items = $context['items'];
  /** @var \Drupal\field\Entity\FieldConfig $field_definition */
  $field_definition = $items->getFieldDefinition();
  $target_type = $field_definition->getSetting('target_type');
  if ($target_type != 'taxonomy_term') {
    return FALSE;
  }
  return TRUE;
}

function _iucn_fields_alter_element_options(array &$element, $assessment_year) {
  foreach ($element['#options'] as $tid => &$label) {
    $term = Term::load($tid);
    if (empty($term)) {
      continue;
    }
    $term_name = $term->getName();
    /** @var \Drupal\iucn_fields\Plugin\TermAlterService $term_alter_service */
    $term_alter_service = \Drupal::service('iucn_fields.term_alter');
    if ($term_alter_service->isTermHiddenForYear($tid, $assessment_year)) {
      unset($element['#options'][$tid]);
      if (!empty($element['#default_value'])) {
        if (is_array($element['#default_value'])) {
          unset($element['#default_value'][$tid]);
        }
        elseif ($element['#default_value'] == $tid) {
          $element['#default_value'] = NULL;
        }
      }
      continue;
    }
    $term_new_name = $term_alter_service->getTermLabelForYear($tid, $assessment_year);
    if (!empty($term_new_name)) {
      $label = str_replace($term_name, $term_new_name, $label);
    }
  }
}
