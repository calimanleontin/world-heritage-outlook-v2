<?php


function iucn_assessment_theme() {
  return [
    'field_group_html_element_list' => [
      'render element' => 'element',
      'template' => 'field-group-html-element-list',
    ],
    'rating_image_switcher' => [
      'render element' => 'element',
      'template' => 'rating-image-switcher',
    ],
  ];

}

function template_preprocess_rating_image_switcher(&$variables) {
  $element = $variables['element'];
  $variables['images'] = $element['#images'];
  $variables['years'] = $element['#years'];

  $iucn_config = \Drupal::config('iucn_who.settings');
  $year = $iucn_config->get('assessment_year');
  $variables['active_year'] = $year;

}

function template_preprocess_field_group_html_element_list(&$variables) {

  $element = $variables['element'];

  if (!empty($element['#title']) && !empty($element['#title_element'])) {
    $variables['title_element'] = $element['#title_element'];
    $variables['title'] = $element['#title'];
  }

  $variables['wrapper_element'] = $element['#wrapper_element'];
  $variables['attributes'] = $element['#attributes'];
  $variables['list'] = $element['list'];

}



/**
 * Implements hook_node_update().
 */
function iucn_assessment_node_update(Drupal\node\Entity\Node $node) {
  if ($node->bundle() == 'site_assessment' && !empty($node->field_as_site->entity)) {
    $site = $node->field_as_site->entity;
    if (!empty($site)) {
      // Reset site assessments for this site.
      _iunc_assessment_set_site_assessments($site);
      $site->save();
    }
  }
}

/**
 * Determine the assessment year to show for a site.
 */
function iucn_assessment_year_display(\Drupal\node\Entity\Node $site) {
  if ($site->field_assessments->count() == 0) {
    return NULL;
  }
  $iucn_config = \Drupal::config('iucn_who.settings');
  $request = Drupal::request();
  $year = $request->get('year', $iucn_config->get('assessment_year'));
  $active_date = $site->field_assessments->entity->field_as_cycle->value;
  foreach ($site->field_assessments as $assessment) {
    if ($assessment->entity->field_as_cycle->value == $year) {
      $active_date = $year;
      break;
    }
  }
  return $active_date;
}
/**
 * Implements hook_preprocess_field().
 */
function iucn_assessment_preprocess_field(&$variables) {
  if ($variables['field_name'] == 'field_assessments') {
    $variables['element']['#cache']['contexts'][] = 'url';
    // We have done this to support switcher between years on display.
    // In the end we just use it for print view mode.
    if (!empty($variables['items'])) {
      if (\Drupal::routeMatch() == 'iucn_pdf.download') {
        $display_year = iucn_assessment_year_display($variables['element']['#object']);
      }
      else {
        $iucn_config = \Drupal::config('iucn_who.settings');
        $display_year = $iucn_config->get('assessment_year');
      }
      $showing_item = NULL;
      foreach ($variables['items'] as $item) {
        /* @var \Drupal\node\Entity\Node $assessment */
        $assessment = $item['content']['#node'];
        if ($assessment->field_as_cycle->value == $display_year) {
          $showing_item = $item;
          $variables['element']['#cache']['tags'][] = 'node:' . $assessment->id();
          break;
        }
      }
      $variables['items'] = !empty($showing_item) ? [$showing_item] : [];
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function iucn_assessment_node_presave(Drupal\node\Entity\Node $node) {
  if ($node->bundle() == 'site' && !$node->isNew()) {
    _iunc_assessment_set_site_assessments($node);
  }
}

function _iunc_assessment_set_site_assessments($node) {
  // Set assessment field.
  $query = \Drupal::entityQuery('node');
  $query->condition('status', 1);
  $query->condition('type', 'site_assessment');
  $query->condition('field_as_site.target_id', $node->id());
  $entity_ids = $query->execute();
  $field_values = [];
  if (!empty($entity_ids)) {
    foreach ($entity_ids as $id) {
      $field_values[] = ['target_id' => $id];
    }
  }
  $node->field_assessments = $field_values;

  $iucn_config = \Drupal::config('iucn_who.settings');
  $current_year = $iucn_config->get('assessment_year');

  // Set current assessment.
  $query = \Drupal::entityQuery('node');
  $query->condition('status', 1);
  $query->condition('type', 'site_assessment');
  $query->condition('field_as_site.target_id', $node->id());
  $query->condition('field_as_cycle.value', $current_year);
  $field_values = [];
  $entity_ids = $query->execute();
  if (!empty($entity_ids)) {
    foreach ($entity_ids as $id) {
      $field_values[] = ['target_id' => $id];
    }
  }
  $node->field_current_assessment = $field_values;


}

function iucn_assessment_field_group_pre_render(&$element, &$group, &$rendering_object) {
  if (!empty($element['#group_name']) && $element['#group_name'] == 'group_conservation_outlook') {
    if (!empty($element['field_as_end_date']['#object']->field_as_cycle)) {
      $element['#title'] = $element['field_as_end_date']['#object']->field_as_cycle->value . ' ' . $element['#title'];
    }
  }
}

/**
 * Implements hook_webform_element_alter().
 */
function iucn_assessment_webform_element_alter(array &$element, \Drupal\Core\Form\FormStateInterface $form_state, array $context) {
  if ($element['#webform_id'] == 'site_feedback--subject' && $element['#webform_key'] == 'subject') {
    /* @var \Drupal\node\Entity\Node $node */
    $node = \Drupal::routeMatch()->getParameter('node');
    if (is_object($node) && $node->bundle() == 'site') {
      $element['#default_value'] = t('Feedback on @site', ['@site' => $node->getTitle()]);
      $element['#attributes']['readonly'] = 'readonly';
    }
  }
}
